type Query {
    getAllEstudiantes: [Estudiante]
    estudiante(id: Int): Estudiante
    getAllMaterias: [Materia]
    getMateriaById(id: ID!): Materia
    getAllHobbies: [Hobby]
    getHobby(id: Int): Hobby
    getAllDocentes: [Docente]
    getDocente(id:Int): Docente
    getAllNotas: [Nota]
    nota(id: ID!): Nota
    notasByMateria(materiaId: ID!): [Nota]
    notasByHobby(hobbyId: Int): [Nota]
    errors: [Error]
}

type Estudiante {
    id: ID!
    nombre: String!
    apellido: String
    profesion: String
    contactos: [String]
}

type Docente {
    id: ID!
    nombre: String!
    apellido: String
    profesion: String
    contactos: [String]
}

type Materia {
    id: ID!
    nombre: String!
    profesor: String
    notas: [Nota]
    sede: [Sede]

}

type Sede {
    id: ID
    locacion: String
}

type Hobby {
    id: ID!
    nombre: String!
    horasPorDias: String
    sede: [Int]
}

type Nota {
    id: ID
    nota: String
    actividad: String
}

enum ErrorCode {
    NOT_FOUND
}

type Error {
    code: ErrorCode!
    message: String!
}
